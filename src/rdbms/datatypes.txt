****************************
PostgreSQL RDBMS: Data types
****************************

PostgreSQL has a rich set of data types available to users.

Users can add new types to PostgreSQL using the ``CREATE TYPE`` command.

.. literalinclude:: /../libms-db/libms.sql
    :caption: Custom data type definition
    :language: postgresql
    :lines: 72-89

+-------------------------------+-------------------+------------------------------------------------------------------+
| Name                          | Aliases           | Description                                                      |
+===============================+===================+==================================================================+
| ``bigint``                    | ``int8``          | signed eight-byte integer                                        |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``bigserial``                 | ``serial8``       | auto incrementing eight-byte integer                             |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``bit``                       |                   | fixed-length bit string                                          |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``bit varying``               | ``varbit``        | variable-length bit string                                       |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``boolean``                   | ``bool``          | logical Boolean (true/false)                                     |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``box``                       |                   | rectangular box on a plane                                       |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``bytea``                     |                   | binary data (“byte array”)                                       |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``character``                 | ``char``          | fixed-length character string                                    |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``character varying``         | ``varchar``       | variable-length character string                                 |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``cidr``                      |                   | IPv4 or IPv6 network address                                     |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``circle``                    |                   | circle on a plane                                                |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``double precision``          | ``float8``        | double precision floating-point number (8 bytes)                 |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``date``                      |                   | calendar date (year, month, day)                                 |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``inet``                      |                   | IPv4 or IPv6 host address                                        |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``integer``                   | ``int``, ``int4`` | signed four-byte integer                                         |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``interval``                  |                   | time span                                                        |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``json``                      |                   | textual JSON data                                                |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``jsonb``                     |                   | binary JSON data, decomposed                                     |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``line``                      |                   | infinite line on a plane                                         |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``lseg``                      |                   | line segment on a plane                                          |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``macaddr``                   |                   | MAC (Media Access Control) address                               |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``macaddr8``                  |                   | MAC (Media Access Control) address (EUI-64 format)               |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``money``                     |                   | currency amount                                                  |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``numeric``                   | ``decimal``       | exact numeric of selectable precision                            |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``path``                      |                   | geometric path on a plane                                        |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``pg_lsn``                    |                   | PostgreSQL Log Sequence Number                                   |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``pg_snapshot``               |                   | user-level transaction ID snapshot                               |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``point``                     |                   | geometric point on a plane                                       |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``polygon``                   |                   | closed geometric path on a plane                                 |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``real``                      | ``float4``        | single precision floating-point number (4 bytes)                 |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``smallint``                  | ``int2``          | signed two-byte integer                                          |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``smallserial``               | ``serial2``       | auto incrementing two-byte integer                               |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``serial``                    | ``serial4``       | auto incrementing four-byte integer                              |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``text``                      |                   | variable-length character string                                 |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``time``                      |                   | time of day (no time zone)                                       |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``time with time zone``       | ``timetz``        | time of day, including time zone                                 |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``timestamp``                 |                   | date and time (no time zone)                                     |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``timestamp with time zone``  | ``timestamptz``   | date and time, including time zone                               |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``tsquery``                   |                   | text search query                                                |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``tsvector``                  |                   | text search document                                             |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``txid_snapshot``             |                   | user-level transaction ID snapshot (deprecated; see pg_snapshot) |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``uuid``                      |                   | universally unique identifier                                    |
+-------------------------------+-------------------+------------------------------------------------------------------+
| ``xml``                       |                   | XML data                                                         |
+-------------------------------+-------------------+------------------------------------------------------------------+

Numeric types
=============

Numeric types consist of two-, four-, and eight-byte integers, four- and
eight-byte floating-point numbers, and selectable-precision decimals.

Type types ``smallint``, ``integer`` and ``bigint`` store whole numbers, that
is, numbers without fractional component, of various ranges. Attempts to store
values outside of the allowed range will result an error.

+------------------+--------------+---------------------------------+--------------------------------------------------+
| Name             | Storage Size | Description                     | Range                                            |
+==================+==============+=================================+==================================================+
| smallint         | 2 bytes      | small-range integer             | -32768 to +32767                                 |
+------------------+--------------+---------------------------------+--------------------------------------------------+
| integer          | 4 bytes      | typical choice for integer      | -2147483648 to +2147483647                       |
+------------------+--------------+---------------------------------+--------------------------------------------------+
| bigint           | 8 bytes      | large-range integer             | -9223372036854775808 to +9223372036854775807     |
+------------------+--------------+---------------------------------+--------------------------------------------------+
| decimal          | variable     | user-specified precision,       | up to 131072 digits before the decimal point;    |
|                  |              | exact                           | up to 16383 digits after the decimal point       |
+------------------+--------------+---------------------------------+--------------------------------------------------+
| numeric          | variable     | user-specified precision,       | up to 131072 digits before the decimal point;    |
|                  |              | exact                           | up to 16383 digits after the decimal point       |
+------------------+--------------+---------------------------------+--------------------------------------------------+
| real             | 4 bytes      | variable-precision,             | 6 decimal digits precision                       |
|                  |              | inexact                         |                                                  |
+------------------+--------------+---------------------------------+--------------------------------------------------+
| double precision | 8 bytes      | variable-precision,             | 15 decimal digits precision                      |
|                  |              | inexact                         |                                                  |
+------------------+--------------+---------------------------------+--------------------------------------------------+
| smallserial      | 2 bytes      | small auto incrementing integer | 1 to 32767                                       |
+------------------+--------------+---------------------------------+--------------------------------------------------+
| serial           | 4 bytes      | auto incrementing integer       | 1 to 2147483647                                  |
+------------------+--------------+---------------------------------+--------------------------------------------------+
| bigserial        | 8 bytes      | large auto incrementing integer | 1 to 9223372036854775807                         |
+------------------+--------------+---------------------------------+--------------------------------------------------+

Character types
===============

+-------------------------------------+----------------------------+
| Name                                | Description                |
+=====================================+============================+
| ``character varying``, ``varchar``  | variable-length with limit |
+-------------------------------------+----------------------------+
| ``character``, ``char``, ``bpchar`` | fixed-length, blank-padded |
+-------------------------------------+----------------------------+
| ``bpchar`` without length specifier | variable unlimited length, |
|                                     | blank-trimmed              |
+-------------------------------------+----------------------------+
| ``text``                            | variable-unlimited length  |
+-------------------------------------+----------------------------+

SQL defines two primary character types: ``character varying(n)`` and
``character(n)``, where ``n`` is a positive integer. Both of these types can
store string up to ``n`` characters length. An attempt to store a longer string
into a column of these types will result an error, unless all the excess
characters are all spaces, in which case the string will be truncated to
the maximum length. However, if one explicitly casts a value to ``varchar(n)``
or ``char(n)``, then an over-legth value will be truncated to ``n`` characters
without raising an error. If the string to be stored is shorter than the
declared length, value of type ``char`` will be space-padded; values of
``varchar`` will simply store the storter string.

In addition postgres provides the ``text`` type, which stores strings of any
length.

If specified, the length ``n`` must be greater than 0 and cannot exceed 
10,485,760. If ``character varying`` is used without length specifier,
the type accepts strings of any length. If ``bpchar`` lacks a length specifier,
it also accepts strings of any length, but trailing spaces are semantically
insignificant. If ``character`` lacks a specifier, it is equavivalent to 
``character(1)``.
