.. meta::
    :description: Database normalization
    :author: Serhii Horodilov
    :keywords: sql, db, database, normalization

*******************************************************************************
                            Database Normalization
*******************************************************************************

Normalization is a process of organizing data in a database so that it is free
from redundancy and dependency. It helps to eliminate data inconsistencies and
anomalies, thereby improving data integrity. Normalization is a set of rules or
guidelines to design a database schema in such a way that it avoids data
duplication, data redundancy, and data inconsistency.

The main purpose of database normalization is to avoid complexities, eliminate
duplicates, and organize data in a consistent way. Normalization reduces data
redundancy and dependency, making the database more efficient, flexible, and
scalable. It also helps in maintaining data consistency and accuracy, and
ensures that updates and deletions are properly handled.

There are 6 **normal forms**, but this section focuses on the first 3 only,
since the commonest normal form you'll see out there is *3NF* (third normal
form).

Normalized tables are:

-   Easier to understand
-   Easier to enhance and extend
-   Protected from:

    -   insertion anomalies
    -   update anomalies
    -   deletion anomalies

Anomalies
=========

Insertion anomalies
-------------------

.. todo: complete subsection

Update anomalies
----------------

.. todo: complete subsection

Deletion anomalies
------------------

.. todo: complete subsection

First normal form (1NF)
=======================

.. rubric:: Data example

.. todo: add data example (no NF)

Requirements
------------

-   Row order should not be used to convey information.
-   Data types should not be mixed within the same column
    (and the RDBMS won't let you do in anyway).
-   Tables should have their primary keys.
-   Repeating groups should be eliminated.

Applying 1NF
------------

.. todo: complete subsection
.. todo: add data example in 1NF

Second normal form (2NF)
========================

Requirements
------------

-   Each non-key attribute must depend on the entire primary key

Applying 2NF
------------

.. todo: complete subsection
.. todo: add data example in 2NF

Third normal form (3NF)
=======================

.. todo: definition, bcnf, example

Requirements
------------

-   Every non-key attribute in a table should depend on the key, the whole key,
    and nothing but the key (no transitive dependency).

.. note::

    **Boyce-Codd normal form**

    :abbr:`BCNF (Boyce-Codd Normal Form)` is the stronger version of 3NF.
    It also is called as 3.5NF (three-and-a-half normal form).

    **Every attribute** in a table should depend on the key, the whole key,
    and nothing but the key.

Applying 3NF
------------

.. todo: complete subsection
.. todo: add data example in 3NF

Conclusion
==========

Each next normal form includes all the requirements for the previous one.

.. todo: complete the conclusion
