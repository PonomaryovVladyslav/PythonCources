.. todo: review and update document

.. meta::
    :description: Database normalization
    :author: Serhii Horodilov
    :keywords: sql, db, database, normalization

*******************************************************************************
                            Database Normalization
*******************************************************************************

Normalization is a process of organizing data in a database so that it is free
from redundancy and dependency. It helps to eliminate data inconsistencies and
anomalies, thereby improving data integrity. Normalization is a set of rules or
guidelines to design a database schema in such a way that it avoids data
duplication, data redundancy, and data inconsistency.

The main purpose of database normalization is to avoid complexities, eliminate
duplicates, and organize data in a consistent way. Normalization reduces data
redundancy and dependency, making the database more efficient, flexible, and
scalable. It also helps in maintaining data consistency and accuracy, and
ensures that updates and deletions are properly handled.

There are 6 **normal forms**, but this section focuses on the first 3 only,
since the commonest normal form you'll see out there is *3NF* (third normal
form).

Normalized tables are:

-   Easier to understand
-   Easier to enhance and extend
-   Protected from:

    -   insertion anomalies
    -   update anomalies
    -   deletion anomalies

First normal form (1NF)
=======================

.. todo: definition, example

..  using row order to convey information violates 1NF
..  mixing data types within the same column violates 1NF
    (and the DB platform won't let you do it anyway)
..  a table without a primary key violates 1NF
..  storing a repeating group of data items on a single row violates 1NF

Second normal form (2NF)
========================

.. todo: definition, example

..  2NF: each non-key attribute must depend on the entire primary key
    (partial dependency)

Third normal form (3NF)
=======================

.. todo: definition, bcnf, example

..  every non-key attribute in a table should depend on the key, the whole key,
    and nothing but the key (no transitive dependency)
..  Boyce-Codd normal form: **every attribute** in a table should...

Conclusion
==========

.. todo

..  1nf -> 2nf -> 3nf -> bcnf -> 4nf -> 5nf
